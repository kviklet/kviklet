name: AWS IAM Integration Tests

on:
  pull_request:
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  iam-tests:
    name: Run AWS IAM Tests
    runs-on: ubuntu-latest
    environment: AWS
    env:
      RUN_AWS_IAM_TESTS: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # Updated to v4
        with:
          # Ensure these secrets are set in your GitHub repo settings
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Grant execute permission for scripts and gradlew
        run: |
          chmod +x ./backend/gradlew
          chmod +x ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/setup-mysql-iam.sh
          chmod +x ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/cleanup-mysql-iam.sh
          chmod +x ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/setup-postgres-iam.sh
          chmod +x ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/cleanup-postgres-iam.sh
        working-directory: .

      - name: Setup MySQL for IAM Test
        id: setup_mysql
        run: |
          ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/setup-mysql-iam.sh
        working-directory: .

      - name: Setup PostgreSQL for IAM Test
        id: setup_postgres
        run: |
          ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/setup-postgres-iam.sh
        working-directory: .

      - name: Run AWS IAM integration tests
        working-directory: ./backend
        run: |
          echo "MySQL Host: ${{ steps.setup_mysql.outputs.mysql_host }}"
          echo "PostgreSQL Host: ${{ steps.setup_postgres.outputs.postgres_host }}"
          ./gradlew test -Djunit.jupiter.tags.include=aws-integration \
            -Daws.db.mysqlhost=${{ steps.setup_mysql.outputs.mysql_host }} \
            -Daws.db.postgreshost=${{ steps.setup_postgres.outputs.postgres_host }} \
            --info --stacktrace

      - name: Cleanup MySQL Resources
        if: always() # Ensures cleanup runs even if tests fail
        working-directory: .
        run: ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/cleanup-mysql-iam.sh

      - name: Cleanup PostgreSQL Resources
        if: always() # Ensures cleanup runs even if tests fail
        working-directory: .
        run: ./backend/src/test/kotlin/dev/kviklet/kviklet/executor/cleanup-postgres-iam.sh
